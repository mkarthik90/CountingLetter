import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Test {

	public static void main(String[] args) throws Exception {

		Map<String, Integer> wordList = new HashMap<String, Integer>();
		try {

			for (int i = 0; i < args.length; i++) {
				File file = new File(args[i]);
				Scanner sc = new Scanner(file);
				while (sc.hasNextLine()) {
					String line = sc.nextLine();
					String[] keyValue = line.split(" ");
					if (wordList.get(keyValue[0]) != null) {
						int count = Integer.parseInt(keyValue[1])
								+ wordList.get(keyValue[0]);
						wordList.put(keyValue[0], count);
					} else {
						wordList.put(keyValue[0], Integer.parseInt(keyValue[1]));
					}
				}

			}

			// File is locked and written because other output process might
			// change the file

			File file = new File("Output.txt");
			if (file.exists() == false) {
				file.createNewFile();
			}

			FileInputStream in = new FileInputStream(file);
			BufferedReader reader = new BufferedReader(
					new InputStreamReader(in));
			FileOutputStream out = new FileOutputStream(file);
			BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(out));
			try {
				// File is locked and written because other output process might
				// change the file
				java.nio.channels.FileLock lock = in.getChannel().lock();
				//java.nio.channels.FileLock lock2 = out.getChannel().lock();
				try {

					reader.readLine();
					String line;
					Map<String, String> wordListFromFileMap = new HashMap<String, String>();
					while ((line = reader.readLine()) != null) {
						String[] keyValue = line.split(" ");
						wordListFromFileMap.put(keyValue[0], keyValue[1]);
					}

					for (Map.Entry<String, Integer> entry : wordList.entrySet()) {
						if (wordListFromFileMap.get(entry.getKey()) != null) {
							int count = Integer.parseInt(wordListFromFileMap
									.get(entry.getKey())) + entry.getValue();
							wordList.put(entry.getKey(), count);
						}
					}

					// Clearning the contents of the file before writing the
					// contents

					PrintWriter writer = new PrintWriter(file);
					writer.print("");
					writer.close();

					for (Map.Entry<String, Integer> entry : wordList.entrySet()) {
						bw.write(entry.getKey() + " " + entry.getValue() + "\n");
					}

				} finally {
					bw.close();
					reader.close();
					lock.release();
					//lock2.release();
				}
			} finally {
				in.close();
				out.close();
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

}
